{"version":3,"file":"pages/usercenter/person-info/index.js","mappingsvIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack:///./pages/usercenter/person-info/index.js","webpack:///./services/usercenter/fetchPerson.js"],"sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nimport { fetchPerson } from '../../../services/usercenter/fetchPerson';\nimport { phoneEncryption } from '../../../utils/util';\nimport Toast from 'tdesign-miniprogram/toast/index';\nPage({\n    data: {\n        personInfo: {\n            avatarUrl: '',\n            nickName: '',\n            gender: 0,\n            phoneNumber: '',\n        },\n        showUnbindConfirm: false,\n        pickerOptions: [\n            {\n                name: '男',\n                code: '1',\n            },\n            {\n                name: '女',\n                code: '2',\n            },\n        ],\n        typeVisible: false,\n        genderMap: ['', '男', '女'],\n    },\n    onLoad: function () {\n        this.init();\n    },\n    init: function () {\n        this.fetchData();\n    },\n    fetchData: function () {\n        var _this = this;\n        fetchPerson().then(function (personInfo) {\n            _this.setData({\n                personInfo: personInfo,\n                'personInfo.phoneNumber': phoneEncryption(personInfo.phoneNumber),\n            });\n        });\n    },\n    onClickCell: function (_a) {\n        var currentTarget = _a.currentTarget;\n        var dataset = currentTarget.dataset;\n        var nickName = this.data.personInfo.nickName;\n        switch (dataset.type) {\n            case 'gender':\n                this.setData({\n                    typeVisible: true,\n                });\n                break;\n            case 'name':\n                wx.navigateTo({\n                    url: \"/pages/usercenter/name-edit/index?name=\" + nickName,\n                });\n                break;\n            case 'avatarUrl':\n                this.toModifyAvatar();\n                break;\n            default: {\n                break;\n            }\n        }\n    },\n    onClose: function () {\n        this.setData({\n            typeVisible: false,\n        });\n    },\n    onConfirm: function (e) {\n        var _this = this;\n        var value = e.detail.value;\n        this.setData({\n            typeVisible: false,\n            'personInfo.gender': value,\n        }, function () {\n            Toast({\n                context: _this,\n                selector: '#t-toast',\n                message: '设置成功',\n                theme: 'success',\n            });\n        });\n    },\n    toModifyAvatar: function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var tempFilePath, tempUrlArr, tempFileName, error_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, new Promise(function (resolve, reject) {\n                                wx.chooseImage({\n                                    count: 1,\n                                    sizeType: ['compressed'],\n                                    sourceType: ['album', 'camera'],\n                                    success: function (res) {\n                                        var _a = res.tempFiles[0], path = _a.path, size = _a.size;\n                                        if (size <= 10485760) {\n                                            resolve(path);\n                                        }\n                                        else {\n                                            reject({ errMsg: '图片大小超出限制，请重新上传' });\n                                        }\n                                    },\n                                    fail: function (err) { return reject(err); },\n                                });\n                            })];\n                    case 1:\n                        tempFilePath = _a.sent();\n                        tempUrlArr = tempFilePath.split('/');\n                        tempFileName = tempUrlArr[tempUrlArr.length - 1];\n                        Toast({\n                            context: this,\n                            selector: '#t-toast',\n                            message: \"\\u5DF2\\u9009\\u62E9\\u56FE\\u7247-\" + tempFileName,\n                            theme: 'success',\n                        });\n                        return [3 /*break*/, 3];\n                    case 2:\n                        error_1 = _a.sent();\n                        if (error_1.errMsg === 'chooseImage:fail cancel')\n                            return [2 /*return*/];\n                        Toast({\n                            context: this,\n                            selector: '#t-toast',\n                            message: error_1.errMsg || error_1.msg || '修改头像出错了',\n                            theme: 'error',\n                        });\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    },\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fetchPerson = void 0;\nvar tslib_1 = require(\"tslib\");\nvar index_1 = require(\"../../config/index\");\n/** 获取个人中心信息 */\nfunction mockFetchPerson() {\n    var delay = require('../_utils/delay').delay;\n    var genSimpleUserInfo = require('../../model/usercenter/usercenter').genSimpleUserInfo;\n    var genAddress = require('../../model/address').genAddress;\n    var address = genAddress();\n    return delay().then(function () { return ((0, tslib_1.__assign)((0, tslib_1.__assign)({}, genSimpleUserInfo()), { address: {\n            provinceName: address.provinceName,\n            provinceCode: address.provinceCode,\n            cityName: address.cityName,\n            cityCode: address.cityCode,\n        } })); });\n}\n/** 获取个人中心信息 */\nfunction fetchPerson() {\n    if (index_1.config.useMock) {\n        return mockFetchPerson();\n    }\n    return new Promise(function (resolve) {\n        resolve('real api');\n    });\n}\nexports.fetchPerson = fetchPerson;\n"],"names":[],"sourceRoot":""}
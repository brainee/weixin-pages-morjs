{"version":3,"file":"pages/usercenter/address/list/index.js","mappingssources":["webpack:///./pages/usercenter/address/list/index.js"],"sourcesContent":["import { __spreadArray } from \"tslib\";\n/* eslint-disable no-param-reassign */\nimport { fetchDeliveryAddressList } from '../../../../services/address/fetchAddress';\nimport Toast from 'tdesign-miniprogram/toast/index';\nimport { resolveAddress, rejectAddress } from './util';\nimport { getAddressPromise } from '../edit/util';\nPage({\n    data: {\n        addressList: [],\n        deleteID: '',\n        showDeleteConfirm: false,\n        isOrderSure: false,\n    },\n    /** 选择模式 */\n    selectMode: false,\n    /** 是否已经选择地址，不置为true的话页面离开时会触发取消选择行为 */\n    hasSelect: false,\n    onLoad: function (query) {\n        var _a = query.selectMode, selectMode = _a === void 0 ? '' : _a, _b = query.isOrderSure, isOrderSure = _b === void 0 ? '' : _b, _c = query.id, id = _c === void 0 ? '' : _c;\n        this.setData({\n            isOrderSure: !!isOrderSure,\n            id: id,\n        });\n        this.selectMode = !!selectMode;\n        this.init();\n    },\n    init: function () {\n        this.getAddressList();\n    },\n    onUnload: function () {\n        if (this.selectMode && !this.hasSelect) {\n            rejectAddress();\n        }\n    },\n    getAddressList: function () {\n        var _this = this;\n        var id = this.data.id;\n        fetchDeliveryAddressList().then(function (addressList) {\n            addressList.forEach(function (address) {\n                if (address.id === id) {\n                    address.checked = true;\n                }\n            });\n            _this.setData({ addressList: addressList });\n        });\n    },\n    getWXAddressHandle: function () {\n        var _this = this;\n        wx.chooseAddress({\n            success: function (res) {\n                var _a;\n                if (res.errMsg.indexOf('ok') === -1) {\n                    Toast({\n                        context: _this,\n                        selector: '#t-toast',\n                        message: res.errMsg,\n                        icon: '',\n                        duration: 1000,\n                    });\n                    return;\n                }\n                Toast({\n                    context: _this,\n                    selector: '#t-toast',\n                    message: '添加成功',\n                    icon: '',\n                    duration: 1000,\n                });\n                var len = _this.data.addressList.length;\n                _this.setData((_a = {},\n                    _a[\"addressList[\" + len + \"]\"] = {\n                        name: res.userName,\n                        phoneNumber: res.telNumber,\n                        address: \"\" + res.provinceName + res.cityName + res.countryName + res.detailInfo,\n                        isDefault: 0,\n                        tag: '微信地址',\n                        id: len,\n                    },\n                    _a));\n            },\n        });\n    },\n    confirmDeleteHandle: function (_a) {\n        var detail = _a.detail;\n        var id = (detail || {}).id;\n        if (id !== undefined) {\n            this.setData({ deleteID: id, showDeleteConfirm: true });\n            Toast({\n                context: this,\n                selector: '#t-toast',\n                message: '地址删除成功',\n                theme: 'success',\n                duration: 1000,\n            });\n        }\n        else {\n            Toast({\n                context: this,\n                selector: '#t-toast',\n                message: '需要组件库发新版才能拿到地址ID',\n                icon: '',\n                duration: 1000,\n            });\n        }\n    },\n    deleteAddressHandle: function (e) {\n        var id = e.currentTarget.dataset.id;\n        this.setData({\n            addressList: this.data.addressList.filter(function (address) { return address.id !== id; }),\n            deleteID: '',\n            showDeleteConfirm: false,\n        });\n    },\n    editAddressHandle: function (_a) {\n        var detail = _a.detail;\n        this.waitForNewAddress();\n        var id = (detail || {}).id;\n        wx.navigateTo({ url: \"/pages/usercenter/address/edit/index?id=\" + id });\n    },\n    selectHandle: function (_a) {\n        var detail = _a.detail;\n        if (this.selectMode) {\n            this.hasSelect = true;\n            resolveAddress(detail);\n            wx.navigateBack({ delta: 1 });\n        }\n        else {\n            this.editAddressHandle({ detail: detail });\n        }\n    },\n    createHandle: function () {\n        this.waitForNewAddress();\n        wx.navigateTo({ url: '/pages/usercenter/address/edit/index' });\n    },\n    waitForNewAddress: function () {\n        var _this = this;\n        getAddressPromise()\n            .then(function (newAddress) {\n            var addressList = __spreadArray([], _this.data.addressList, true);\n            newAddress.phoneNumber = newAddress.phone;\n            newAddress.address = \"\" + newAddress.provinceName + newAddress.cityName + newAddress.districtName + newAddress.detailAddress;\n            newAddress.tag = newAddress.addressTag;\n            if (!newAddress.addressId) {\n                newAddress.id = \"\" + addressList.length;\n                newAddress.addressId = \"\" + addressList.length;\n                if (newAddress.isDefault === 1) {\n                    addressList = addressList.map(function (address) {\n                        address.isDefault = 0;\n                        return address;\n                    });\n                }\n                else {\n                    newAddress.isDefault = 0;\n                }\n                addressList.push(newAddress);\n            }\n            else {\n                addressList = addressList.map(function (address) {\n                    if (address.addressId === newAddress.addressId) {\n                        return newAddress;\n                    }\n                    return address;\n                });\n            }\n            addressList.sort(function (prevAddress, nextAddress) {\n                if (prevAddress.isDefault && !nextAddress.isDefault) {\n                    return -1;\n                }\n                if (!prevAddress.isDefault && nextAddress.isDefault) {\n                    return 1;\n                }\n                return 0;\n            });\n            _this.setData({\n                addressList: addressList,\n            });\n        })\n            .catch(function (e) {\n            if (e.message !== 'cancel') {\n                Toast({\n                    context: _this,\n                    selector: '#t-toast',\n                    message: '地址编辑发生错误',\n                    icon: '',\n                    duration: 1000,\n                });\n            }\n        });\n    },\n});\n"],"names":[],"sourceRoot":""}
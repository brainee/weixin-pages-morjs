{"version":3,"file":"pages/usercenter/components/t-location/index.js","mappingssources":["webpack:///./pages/usercenter/components/t-location/index.js"],"sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nimport { getPermission } from '../../../../utils/getPermission';\nimport { phoneRegCheck } from '../../../../utils/util';\nimport Toast from 'tdesign-miniprogram/toast/index';\nimport { addressParse } from '../../../../utils/addressParse';\nimport { resolveAddress, rejectAddress } from '../../address/list/util';\nComponent({\n    externalClasses: ['t-class'],\n    properties: {\n        title: {\n            type: String,\n        },\n        navigateUrl: {\n            type: String,\n        },\n        navigateEvent: {\n            type: String,\n        },\n        isCustomStyle: {\n            type: Boolean,\n            value: false,\n        },\n        isDisabledBtn: {\n            type: Boolean,\n            value: false,\n        },\n        isOrderSure: {\n            type: Boolean,\n            value: false,\n        },\n    },\n    methods: {\n        getWxLocation: function () {\n            var _this = this;\n            if (this.properties.isDisabledBtn)\n                return;\n            getPermission({ code: 'scope.address', name: '通讯地址' }).then(function () {\n                wx.chooseAddress({\n                    success: function (options) { return __awaiter(_this, void 0, void 0, function () {\n                        var provinceName, cityName, countyName, detailInfo, userName, telNumber, target, _a, provinceCode, cityCode, districtCode, params_1, navigateEvent_1, error_1;\n                        return __generator(this, function (_b) {\n                            switch (_b.label) {\n                                case 0:\n                                    provinceName = options.provinceName, cityName = options.cityName, countyName = options.countyName, detailInfo = options.detailInfo, userName = options.userName, telNumber = options.telNumber;\n                                    if (!phoneRegCheck(telNumber)) {\n                                        Toast({\n                                            context: this,\n                                            selector: '#t-toast',\n                                            message: '请填写正确的手机号',\n                                        });\n                                        return [2 /*return*/];\n                                    }\n                                    target = {\n                                        name: userName,\n                                        phone: telNumber,\n                                        countryName: '中国',\n                                        countryCode: 'chn',\n                                        detailAddress: detailInfo,\n                                        provinceName: provinceName,\n                                        cityName: cityName,\n                                        districtName: countyName,\n                                        isDefault: false,\n                                        isOrderSure: this.properties.isOrderSure,\n                                    };\n                                    _b.label = 1;\n                                case 1:\n                                    _b.trys.push([1, 3, , 4]);\n                                    return [4 /*yield*/, addressParse(provinceName, cityName, countyName)];\n                                case 2:\n                                    _a = _b.sent(), provinceCode = _a.provinceCode, cityCode = _a.cityCode, districtCode = _a.districtCode;\n                                    params_1 = Object.assign(target, {\n                                        provinceCode: provinceCode,\n                                        cityCode: cityCode,\n                                        districtCode: districtCode,\n                                    });\n                                    if (this.properties.isOrderSure) {\n                                        this.onHandleSubmit(params_1);\n                                    }\n                                    else if (this.properties.navigateUrl != '') {\n                                        navigateEvent_1 = this.properties.navigateEvent;\n                                        this.triggerEvent('navigate');\n                                        wx.navigateTo({\n                                            url: this.properties.navigateUrl,\n                                            success: function (res) {\n                                                res.eventChannel.emit(navigateEvent_1, params_1);\n                                            },\n                                        });\n                                    }\n                                    else {\n                                        this.triggerEvent('change', params_1);\n                                    }\n                                    return [3 /*break*/, 4];\n                                case 3:\n                                    error_1 = _b.sent();\n                                    wx.showToast({ title: '地址解析出错，请稍后再试', icon: 'none' });\n                                    return [3 /*break*/, 4];\n                                case 4: return [2 /*return*/];\n                            }\n                        });\n                    }); },\n                    fail: function (err) {\n                        console.warn('未选择微信收货地址', err);\n                    },\n                });\n            });\n        },\n        queryAddress: function (addressId) {\n            return __awaiter(this, void 0, void 0, function () {\n                var data, err_1;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            _a.trys.push([0, 2, , 3]);\n                            return [4 /*yield*/, apis.userInfo.queryAddress({ addressId: addressId })];\n                        case 1:\n                            data = (_a.sent()).data;\n                            return [2 /*return*/, data.userAddressVO];\n                        case 2:\n                            err_1 = _a.sent();\n                            console.error('查询地址错误', err_1);\n                            throw err_1;\n                        case 3: return [2 /*return*/];\n                    }\n                });\n            });\n        },\n        findPage: function (pageRouteUrl) {\n            var currentRoutes = getCurrentPages().map(function (v) { return v.route; });\n            return currentRoutes.indexOf(pageRouteUrl);\n        },\n        onHandleSubmit: function (params) {\n            return __awaiter(this, void 0, void 0, function () {\n                var orderPageDeltaNum;\n                return __generator(this, function (_a) {\n                    try {\n                        orderPageDeltaNum = this.findPage('pages/order/order-confirm/index');\n                        if (orderPageDeltaNum > -1) {\n                            wx.navigateBack({ delta: 1 });\n                            resolveAddress(params);\n                            return [2 /*return*/];\n                        }\n                    }\n                    catch (err) {\n                        rejectAddress(params);\n                        console.error(err);\n                    }\n                    return [2 /*return*/];\n                });\n            });\n        },\n    },\n});\n"],"names":[],"sourceRoot":""}
{"version":3,"file":"ec-canvas/ec-canvas.js","mappings":";;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AClsources":["webpack:///./ec-canvas/ec-canvas.js","webpack:///./ec-canvas/wx-canvas.js"],"sourcesContent":["import WxCanvas from './wx-canvas';\nimport * as echarts from './echarts';\nvar ctx;\nfunction compareVersion(v1, v2) {\n    v1 = v1.split('.');\n    v2 = v2.split('.');\n    var len = Math.max(v1.length, v2.length);\n    while (v1.length < len) {\n        v1.push('0');\n    }\n    while (v2.length < len) {\n        v2.push('0');\n    }\n    for (var i = 0; i < len; i++) {\n        var num1 = parseInt(v1[i]);\n        var num2 = parseInt(v2[i]);\n        if (num1 > num2) {\n            return 1;\n        }\n        else if (num1 < num2) {\n            return -1;\n        }\n    }\n    return 0;\n}\nComponent({\n    properties: {\n        canvasId: {\n            type: String,\n            value: 'ec-canvas'\n        },\n        ec: {\n            type: Object\n        },\n        forceUseOldCanvas: {\n            type: Boolean,\n            value: false\n        }\n    },\n    data: {\n        isUseNewCanvas: false\n    },\n    ready: function () {\n        // Disable prograssive because drawImage doesn't support DOM as parameter\n        // See https://developers.weixin.qq.com/miniprogram/dev/api/canvas/CanvasContext.drawImage.html\n        echarts.registerPreprocessor(function (option) {\n            if (option && option.series) {\n                if (option.series.length > 0) {\n                    option.series.forEach(function (series) {\n                        series.progressive = 0;\n                    });\n                }\n                else if (typeof option.series === 'object') {\n                    option.series.progressive = 0;\n                }\n            }\n        });\n        if (!this.data.ec) {\n            console.warn('组件需绑定 ec 变量，例：<ec-canvas id=\"mychart-dom-bar\" '\n                + 'canvas-id=\"mychart-bar\" ec=\"{{ ec }}\"></ec-canvas>');\n            return;\n        }\n        if (!this.data.ec.lazyLoad) {\n            this.init();\n        }\n    },\n    methods: {\n        init: function (callback) {\n            var _a;\n            var version = (_a = wx.getSystemInfoSync) === null || _a === void 0 ? void 0 : _a.call(wx).SDKVersion;\n            var canUseNewCanvas = compareVersion(version, '2.9.0') >= 0;\n            var forceUseOldCanvas = this.data.forceUseOldCanvas;\n            var isUseNewCanvas = canUseNewCanvas && !forceUseOldCanvas;\n            this.setData({ isUseNewCanvas: isUseNewCanvas });\n            if (forceUseOldCanvas && canUseNewCanvas) {\n                console.warn('开发者强制使用旧canvas,建议关闭');\n            }\n            if (isUseNewCanvas) {\n                // console.log('微信基础库版本大于2.9.0，开始使用<canvas type=\"2d\"/>');\n                // 2.9.0 可以使用 <canvas type=\"2d\"></canvas>\n                this.initByNewWay(callback);\n            }\n            else {\n                var isValid = compareVersion(version, '1.9.91') >= 0;\n                if (!isValid) {\n                    console.error('微信基础库版本过低，需大于等于 1.9.91。'\n                        + '参见：https://github.com/ecomfe/echarts-for-weixin'\n                        + '#%E5%BE%AE%E4%BF%A1%E7%89%88%E6%9C%AC%E8%A6%81%E6%B1%82');\n                    return;\n                }\n                else {\n                    console.warn('建议将微信基础库调整大于等于2.9.0版本。升级后绘图将有更好性能');\n                    this.initByOldWay(callback);\n                }\n            }\n        },\n        getCanvasAndCtx: function () {\n            var _a, _b;\n            //ref https://developer.mozilla.org/zh-CN/docs/Web/API/Web_components/Using_shadow_DOM\n            var myCanvas = (_b = (_a = document.querySelector(\".\" + this.data.canvasId)) === null || _a === void 0 ? void 0 : _a.shadowRoot) === null || _b === void 0 ? void 0 : _b.querySelector(\"canvas\");\n            if (myCanvas) {\n                ctx = myCanvas.getContext(\"2d\");\n                console.log(\"[zy]getCanvasAndCtx if\", ctx, ctx.canvas);\n            }\n            else {\n                console.log(\"[zy]getCanvasAndCtx else\");\n                myCanvas = document.createElement(\"canvas\");\n                myCanvas.canvasId = this.data.canvasId;\n                myCanvas.zy = \"createElement\";\n                myCanvas.className = \"ec-canvas\";\n                document.body.appendChild(myCanvas);\n                ctx = myCanvas.getContext(\"2d\");\n                // ctx.canvas=myCanvas;\n            }\n            if (!ctx.canvas) {\n                console.log(\"[zy]getCanvasAndCtx ctx.canvas is null\");\n                ctx.canvas = myCanvas;\n            }\n            return { ctx: ctx, canvas: myCanvas };\n        },\n        initByOldWay: function (callback) {\n            var _this = this;\n            // 1.9.91 <= version < 2.9.0：原来的方式初始化\n            var ctx = wx.createCanvasContext(this.data.canvasId, this);\n            var canvas;\n            if (ctx.canvas) {\n                canvas = new WxCanvas(ctx, this.data.canvasId, false);\n                console.log(\"[zy]initByOldWay if\", ctx, canvas);\n            }\n            else {\n                var obj = this.getCanvasAndCtx();\n                ctx = obj.ctx;\n                canvas = new WxCanvas(ctx, this.data.canvasId, true, obj.canvas);\n                console.log(\"[zy]initByOldWay else\", ctx, obj.canvas);\n            }\n            if (echarts.setPlatformAPI) {\n                echarts.setPlatformAPI({\n                    createCanvas: function () { return canvas; },\n                });\n            }\n            else {\n                echarts.setCanvasCreator(function () { return canvas; });\n            }\n            ;\n            // const canvasDpr = wx.getSystemInfoSync?.().pixelRatio // 微信旧的canvas不能传入dpr\n            var canvasDpr = 1;\n            var query = wx.createSelectorQuery().in(this);\n            console.log(\"[zy]initByOldWay query\", query);\n            query.select('.ec-canvas').boundingClientRect(function (res) {\n                if (typeof callback === 'function') {\n                    _this.chart = callback(canvas, res.width, res.height, canvasDpr);\n                }\n                else if (_this.data.ec && typeof _this.data.ec.onInit === 'function') {\n                    _this.chart = _this.data.ec.onInit(canvas, res.width, res.height, canvasDpr);\n                }\n                else {\n                    _this.triggerEvent('init', {\n                        canvas: canvas,\n                        width: res.width,\n                        height: res.height,\n                        canvasDpr: canvasDpr // 增加了dpr，可方便外面echarts.init\n                    });\n                }\n            }).exec();\n        },\n        initByNewWay: function (callback) {\n            var _this = this;\n            // version >= 2.9.0：使用新的方式初始化\n            var query = wx.createSelectorQuery().in(this);\n            console.log(\"[zy]initByNewWay query\", query);\n            query\n                .select('.ec-canvas')\n                .fields({ node: true, size: true })\n                .exec(function (res) {\n                var _a;\n                var canvasNode = res[0].node;\n                _this.canvasNode = canvasNode;\n                var canvasDpr = (_a = wx.getSystemInfoSync) === null || _a === void 0 ? void 0 : _a.call(wx).pixelRatio;\n                var canvasWidth = res[0].width;\n                var canvasHeight = res[0].height;\n                var ctx = canvasNode.getContext('2d');\n                var canvas = new WxCanvas(ctx, _this.data.canvasId, true, canvasNode);\n                if (echarts.setPlatformAPI) {\n                    echarts.setPlatformAPI({\n                        createCanvas: function () { return canvas; },\n                        loadImage: function (src, onload, onerror) {\n                            if (canvasNode.createImage) {\n                                var image = canvasNode.createImage();\n                                image.onload = onload;\n                                image.onerror = onerror;\n                                image.src = src;\n                                return image;\n                            }\n                            console.error('加载图片依赖 `Canvas.createImage()` API，要求小程序基础库版本在 2.7.0 及以上。');\n                            // PENDING fallback?\n                        }\n                    });\n                }\n                else {\n                    echarts.setCanvasCreator(function () { return canvas; });\n                }\n                if (typeof callback === 'function') {\n                    _this.chart = callback(canvas, canvasWidth, canvasHeight, canvasDpr);\n                }\n                else if (_this.data.ec && typeof _this.data.ec.onInit === 'function') {\n                    _this.chart = _this.data.ec.onInit(canvas, canvasWidth, canvasHeight, canvasDpr);\n                }\n                else {\n                    _this.triggerEvent('init', {\n                        canvas: canvas,\n                        width: canvasWidth,\n                        height: canvasHeight,\n                        dpr: canvasDpr\n                    });\n                }\n            });\n        },\n        canvasToTempFilePath: function (opt) {\n            var _this = this;\n            if (this.data.isUseNewCanvas) {\n                // 新版\n                var query = wx.createSelectorQuery().in(this);\n                query\n                    .select('.ec-canvas')\n                    .fields({ node: true, size: true })\n                    .exec(function (res) {\n                    var canvasNode = res[0].node;\n                    opt.canvas = canvasNode;\n                    wx.canvasToTempFilePath(opt);\n                });\n            }\n            else {\n                // 旧的\n                if (!opt.canvasId) {\n                    opt.canvasId = this.data.canvasId;\n                }\n                ctx.draw(true, function () {\n                    wx.canvasToTempFilePath(opt, _this);\n                });\n            }\n        },\n        touchStart: function (e) {\n            if (this.chart && e.touches.length > 0) {\n                var touch = e.touches[0];\n                var handler = this.chart.getZr().handler;\n                handler.dispatch('mousedown', {\n                    zrX: touch.x,\n                    zrY: touch.y,\n                    preventDefault: function () { },\n                    stopImmediatePropagation: function () { },\n                    stopPropagation: function () { }\n                });\n                handler.dispatch('mousemove', {\n                    zrX: touch.x,\n                    zrY: touch.y,\n                    preventDefault: function () { },\n                    stopImmediatePropagation: function () { },\n                    stopPropagation: function () { }\n                });\n                handler.processGesture(wrapTouch(e), 'start');\n            }\n        },\n        touchMove: function (e) {\n            if (this.chart && e.touches.length > 0) {\n                var touch = e.touches[0];\n                var handler = this.chart.getZr().handler;\n                handler.dispatch('mousemove', {\n                    zrX: touch.x,\n                    zrY: touch.y,\n                    preventDefault: function () { },\n                    stopImmediatePropagation: function () { },\n                    stopPropagation: function () { }\n                });\n                handler.processGesture(wrapTouch(e), 'change');\n            }\n        },\n        touchEnd: function (e) {\n            if (this.chart) {\n                var touch = e.changedTouches ? e.changedTouches[0] : {};\n                var handler = this.chart.getZr().handler;\n                handler.dispatch('mouseup', {\n                    zrX: touch.x,\n                    zrY: touch.y,\n                    preventDefault: function () { },\n                    stopImmediatePropagation: function () { },\n                    stopPropagation: function () { }\n                });\n                handler.dispatch('click', {\n                    zrX: touch.x,\n                    zrY: touch.y,\n                    preventDefault: function () { },\n                    stopImmediatePropagation: function () { },\n                    stopPropagation: function () { }\n                });\n                handler.processGesture(wrapTouch(e), 'end');\n            }\n        }\n    }\n});\nfunction wrapTouch(event) {\n    for (var i = 0; i < event.touches.length; ++i) {\n        var touch = event.touches[i];\n        touch.offsetX = touch.x;\n        touch.offsetY = touch.y;\n    }\n    return event;\n}\n","var WxCanvas = /** @class */ (function () {\n    function WxCanvas(ctx, canvasId, isNew, canvasNode) {\n        this.ctx = ctx;\n        this.canvasId = canvasId;\n        this.chart = null;\n        this.isNew = isNew;\n        if (isNew) {\n            this.canvasNode = canvasNode;\n        }\n        else {\n            this._initStyle(ctx);\n        }\n        // this._initCanvas(zrender, ctx);\n        this._initEvent();\n    }\n    WxCanvas.prototype.getContext = function (contextType) {\n        if (contextType === '2d') {\n            return this.ctx;\n        }\n    };\n    // canvasToTempFilePath(opt) {\n    //   if (!opt.canvasId) {\n    //     opt.canvasId = this.canvasId;\n    //   }\n    //   return wx.canvasToTempFilePath(opt, this);\n    // }\n    WxCanvas.prototype.setChart = function (chart) {\n        this.chart = chart;\n    };\n    WxCanvas.prototype.addEventListener = function () {\n        // noop\n    };\n    WxCanvas.prototype.attachEvent = function () {\n        // noop\n    };\n    WxCanvas.prototype.detachEvent = function () {\n        // noop\n    };\n    WxCanvas.prototype._initCanvas = function (zrender, ctx) {\n        zrender.util.getContext = function () {\n            return ctx;\n        };\n        zrender.util.$override('measureText', function (text, font) {\n            ctx.font = font || '12px sans-serif';\n            return ctx.measureText(text);\n        });\n    };\n    WxCanvas.prototype._initStyle = function (ctx) {\n        ctx.createRadialGradient = function () {\n            return ctx.createCircularGradient(arguments);\n        };\n    };\n    WxCanvas.prototype._initEvent = function () {\n        var _this = this;\n        this.event = {};\n        var eventNames = [{\n                wxName: 'touchStart',\n                ecName: 'mousedown'\n            }, {\n                wxName: 'touchMove',\n                ecName: 'mousemove'\n            }, {\n                wxName: 'touchEnd',\n                ecName: 'mouseup'\n            }, {\n                wxName: 'touchEnd',\n                ecName: 'click'\n            }];\n        eventNames.forEach(function (name) {\n            _this.event[name.wxName] = function (e) {\n                var touch = e.touches[0];\n                _this.chart.getZr().handler.dispatch(name.ecName, {\n                    zrX: name.wxName === 'tap' ? touch.clientX : touch.x,\n                    zrY: name.wxName === 'tap' ? touch.clientY : touch.y,\n                    preventDefault: function () { },\n                    stopImmediatePropagation: function () { },\n                    stopPropagation: function () { }\n                });\n            };\n        });\n    };\n    Object.defineProperty(WxCanvas.prototype, \"width\", {\n        get: function () {\n            if (this.canvasNode)\n                return this.canvasNode.width;\n            return 0;\n        },\n        set: function (w) {\n            if (this.canvasNode)\n                this.canvasNode.width = w;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WxCanvas.prototype, \"height\", {\n        get: function () {\n            if (this.canvasNode)\n                return this.canvasNode.height;\n            return 0;\n        },\n        set: function (h) {\n            if (this.canvasNode)\n                this.canvasNode.height = h;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return WxCanvas;\n}());\nexport default WxCanvas;\n"],"names":[],"sourceRoot":""}
{"version":3,"file":"npm_components/tdesign-miniprogram/miniprogram_dist/picker-item/picker-item.js","mappingssources":["webpack:///../node_modules/tdesign-miniprogram/miniprogram_dist/picker-item/picker-item.js"],"sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { SuperComponent, wxComponent } from '../common/src/index';\nimport config from '../common/config';\nimport props from './props';\nconst { prefix } = config;\nconst name = `${prefix}-picker-item`;\nconst itemHeight = 80;\nconst DefaultDuration = 240;\nconst { windowWidth } = wx.getSystemInfoSync();\nconst rpx2px = (rpx) => Math.floor((windowWidth * rpx) / 750);\nconst range = function (num, min, max) {\n    return Math.min(Math.max(num, min), max);\n};\nlet PickerItem = class PickerItem extends SuperComponent {\n    constructor() {\n        super(...arguments);\n        this.relations = {\n            '../picker/picker': {\n                type: 'parent',\n                linked(parent) {\n                    if ('keys' in parent.data) {\n                        const { keys } = parent.data;\n                        this.setData({\n                            labelAlias: (keys === null || keys === void 0 ? void 0 : keys.label) || 'label',\n                            valueAlias: (keys === null || keys === void 0 ? void 0 : keys.value) || 'value',\n                        });\n                    }\n                },\n            },\n        };\n        this.externalClasses = [`${prefix}-class`];\n        this.properties = props;\n        this.observers = {\n            options() {\n                this.update();\n            },\n        };\n        this.data = {\n            prefix,\n            classPrefix: name,\n            offset: 0,\n            duration: 0,\n            value: '',\n            curIndex: 0,\n            columnIndex: 0,\n            labelAlias: 'label',\n            valueAlias: 'value',\n        };\n        this.methods = {\n            onTouchStart(event) {\n                this.StartY = event.touches[0].clientY;\n                this.StartOffset = this.data.offset;\n                this.setData({ duration: 0 });\n            },\n            onTouchMove(event) {\n                const { StartY, StartOffset, itemHeight } = this;\n                const touchDeltaY = event.touches[0].clientY - StartY;\n                const deltaY = this.calculateViewDeltaY(touchDeltaY);\n                this.setData({\n                    offset: range(StartOffset + deltaY, -(this.getCount() * itemHeight), 0),\n                    duration: DefaultDuration,\n                });\n            },\n            onTouchEnd() {\n                const { offset, labelAlias, valueAlias, columnIndex } = this.data;\n                const { options } = this.properties;\n                if (offset === this.StartOffset) {\n                    return;\n                }\n                const index = range(Math.round(-offset / this.itemHeight), 0, this.getCount() - 1);\n                this.setData({\n                    curIndex: index,\n                    offset: -index * this.itemHeight,\n                });\n                if (index === this._selectedIndex) {\n                    return;\n                }\n                wx.nextTick(() => {\n                    var _a, _b, _c;\n                    this._selectedIndex = index;\n                    this._selectedValue = (_a = options[index]) === null || _a === void 0 ? void 0 : _a[valueAlias];\n                    this._selectedLabel = (_b = options[index]) === null || _b === void 0 ? void 0 : _b[labelAlias];\n                    (_c = this.$parent) === null || _c === void 0 ? void 0 : _c.triggerColumnChange({\n                        index,\n                        column: columnIndex,\n                    });\n                });\n            },\n            update() {\n                var _a, _b;\n                const { options, value, labelAlias, valueAlias } = this.data;\n                const index = options.findIndex((item) => item[valueAlias] === value);\n                const selectedIndex = index > 0 ? index : 0;\n                this.setData({\n                    offset: -selectedIndex * this.itemHeight,\n                    curIndex: selectedIndex,\n                });\n                this._selectedIndex = selectedIndex;\n                this._selectedValue = (_a = options[selectedIndex]) === null || _a === void 0 ? void 0 : _a[valueAlias];\n                this._selectedLabel = (_b = options[selectedIndex]) === null || _b === void 0 ? void 0 : _b[labelAlias];\n            },\n            resetOrigin() {\n                this.update();\n            },\n            getCount() {\n                var _a, _b;\n                return (_b = (_a = this.data) === null || _a === void 0 ? void 0 : _a.options) === null || _b === void 0 ? void 0 : _b.length;\n            },\n        };\n    }\n    calculateViewDeltaY(touchDeltaY) {\n        return Math.abs(touchDeltaY) > itemHeight ? 1.2 * touchDeltaY : touchDeltaY;\n    }\n    created() {\n        this.StartY = 0;\n        this.StartOffset = 0;\n        this.itemHeight = rpx2px(itemHeight);\n    }\n};\nPickerItem = __decorate([\n    wxComponent()\n], PickerItem);\nexport default PickerItem;\n"],"names":[],"sourceRoot":""}
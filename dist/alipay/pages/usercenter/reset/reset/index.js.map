{"version":3,"file":"pages/usercenter/reset/reset/index.js","mappingsvJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack:///./pages/usercenter/reset/reset/index.js","webpack:///./services/usercenter/resetService.js"],"sourcesContent":["var __MOR_PAGE__ = require('@morjs/core').createPage;\n\nvar __MOR_API__ = require('@morjs/api').mor;\n\nimport { __awaiter } from \"tslib\";\n// pages/usercenter/validate-code/index.ts\nimport { getCurrentPageParam } from '../../../../utils/queryString';\nimport { resetPasswordService, } from '../../../../services/usercenter/resetService';\nimport { wxLogin } from '../../../../services/usercenter/loginService';\nimport { config } from '../../../../config/index';\n__MOR_PAGE__({\n    /**\n     * 页面的初始数据\n     */\n    data: {\n        account: \"\",\n        token: \"\",\n        showPassword: false,\n        formData: {},\n        stepDisabled: true,\n        operate: \"\",\n        mainTitle: \"设置新密码\",\n    },\n    /* 生命周期函数--监听页面加载 */\n    onLoad: function (options) {\n        // console.log(\"[zy]options=\",options);\n        let { account, token, operate } = getCurrentPageParam() || {};\n        console.log(\"[zy]got from last page:account\", account);\n        if (!token) {\n            __MOR_API__.showToast({ title: \"验证码错误，请重新尝试\" });\n            __MOR_API__.navigateBack();\n            return;\n        }\n        let mainTitle = this.data.mainTitle;\n        if (operate == \"register\") {\n            mainTitle = \"设置登录密码\";\n        }\n        else if (operate == \"reset\") {\n            mainTitle = \"设置新密码\";\n        }\n        this.setData({ account, token, operate, mainTitle });\n    },\n    changEye: function () {\n        this.setData({\n            showPassword: !this.data.showPassword\n        });\n    },\n    inputChange: function (e) {\n        let prop = e.currentTarget.dataset.prop;\n        let value = e.detail.value;\n        this.setData({ stepDisabled: !value });\n        this.data.formData[prop] = value;\n        this.setData({\n            formData: this.data.formData\n        });\n    },\n    inputChange2(e) {\n        let prop = e.currentTarget.dataset.prop;\n        let value = e.detail.value;\n        this.setData({ stepDisabled: !value });\n        this.data.formData[prop] = value;\n        this.setData({\n            formData: this.data.formData\n        });\n    },\n    resetPass: function (res) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            let { account, token, operate, } = this.data;\n            let password = this.data.formData.password;\n            const App = getApp();\n            let { openid, unionid } = (_a = App === null || App === void 0 ? void 0 : App.globalData) === null || _a === void 0 ? void 0 : _a.session;\n            if (!account) {\n                __MOR_API__.showToast({\n                    icon: 'none',\n                    title: \"账号不能为空\",\n                });\n                return;\n            }\n            if (!password) {\n                __MOR_API__.showToast({\n                    icon: 'none',\n                    title: \"密码不能为空\",\n                });\n                return;\n            }\n            if (!openid) {\n                __MOR_API__.showToast({\n                    icon: 'none',\n                    title: \"需要先登录小程序\",\n                });\n                yield wxLogin();\n                return;\n            }\n            resetPasswordService({\n                mobile: account,\n                mobileprefix: config.default_mobile_prefix,\n                password,\n                token,\n                operation: operate,\n                openid,\n                unionid,\n            }).then((data) => {\n                if (data) {\n                    __MOR_API__.showModal({\n                        title: '重置成功',\n                        content: \"\",\n                        confirmText: '去登录',\n                        showCancel: false,\n                        success: (res) => {\n                            if (res === null || res === void 0 ? void 0 : res.cancel) {\n                            }\n                            if (res.confirm) {\n                                __MOR_API__.navigateTo({ url: '/pages/usercenter/login/account/index' });\n                            }\n                        }\n                    });\n                }\n            });\n        });\n    },\n    /**\n     * 生命周期函数--监听页面显示\n     */\n    onShow() {\n    },\n    /**\n     * 生命周期函数--监听页面隐藏\n     */\n    onHide() {\n    },\n    /**\n     * 生命周期函数--监听页面卸载\n     */\n    onUnload() {\n    },\n    /**\n     * 页面相关事件处理函数--监听用户下拉动作\n     */\n    onPullDownRefresh() {\n    },\n    /**\n     * 页面上拉触底事件的处理函数\n     */\n    onReachBottom() {\n    },\n    /**\n     * 用户点击右上角分享\n     */\n    onShareAppMessage() {\n    }\n}, \"w\");\n","var __MOR_API__ = require('@morjs/api').mor;\n\nimport { resetPassword, } from '../../model/usercenter/sessionModel';\nexport function resetPasswordService(params) {\n    let prefix = \"[zy]resetPasswordService\";\n    console.log(prefix, \"service start\", params);\n    return resetPassword(params).then((data) => {\n        console.log(prefix, \"resp=\", data);\n        if (data === null || data === void 0 ? void 0 : data.success) {\n            // let {mobile,openid,unionid,loginResponse:{flag,token,uid,errorMsg,}}=data;\n            return true;\n        }\n        else if (data === null || data === void 0 ? void 0 : data.errorMessage) {\n            __MOR_API__.showToast({\n                title: data === null || data === void 0 ? void 0 : data.errorMessage,\n            });\n        }\n        else {\n            __MOR_API__.showToast({\n                title: \"重置失败\",\n            });\n        }\n    });\n}\n"],"names":[],"sourceRoot":""}
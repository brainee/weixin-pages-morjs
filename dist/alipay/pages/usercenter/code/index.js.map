{"version":3,"file":"pages/usercenter/code/index.js","mappingstPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack:///./pages/usercenter/code/index.js","webpack:///./services/usercenter/smsService.js"],"sourcesContent":["var __MOR_PAGE__ = require('@morjs/core').createPage;\n\nvar __MOR_API__ = require('@morjs/api').mor;\n\nimport { __awaiter } from \"tslib\";\n// pages/usercenter/validate-code/index.ts\nimport { getCurrentPageParam } from '../../../utils/queryString';\nimport { wxLogin, } from '../../../services/usercenter/loginService';\nimport { getSmsSession, sendSmsCodeService, validateSmsService, } from '../../../services/usercenter/smsService';\nimport { config } from '../../../config/index';\nconst default_mobile_prefix = config.default_mobile_prefix;\nconst default_sendsms_time = config.default_sendsms_time;\n__MOR_PAGE__({\n    /**\n     * 页面的初始数据\n     */\n    data: {\n        account: \"\",\n        isFocus: true,\n        code: \"\",\n        isRegain: false,\n        timer: null,\n        time: default_sendsms_time,\n        leftSendTimes: 2,\n        stepDisabled: true,\n        validatedToken: \"\",\n    },\n    /* 生命周期函数--监听页面加载 */\n    onLoad: function (options) {\n        var _a;\n        // console.log(\"[zy]options=\",options);\n        let { account, operate } = getCurrentPageParam() || {};\n        console.log(\"[zy]got from last page:account\", account);\n        this.setData({\n            account,\n            operate\n        });\n        let mobile = account;\n        let mobileprefix = default_mobile_prefix;\n        const App = getApp();\n        let { openid, unionid } = (_a = App === null || App === void 0 ? void 0 : App.globalData) === null || _a === void 0 ? void 0 : _a.session;\n        sendSmsCodeService({\n            openid,\n            unionid,\n            mobile,\n            mobileprefix\n        }).then(e => {\n            let { returnCode, maxSendTimes, message, leftSendTimes } = e || {};\n            this.setData({\n                leftSendTimes,\n            });\n            if (returnCode === 0) {\n                this.countdown();\n            }\n            else {\n                __MOR_API__.showToast({ title: message || \"验证码发送失败，请重试\" });\n                this.setData({\n                    isRegain: true,\n                });\n            }\n            console.log(\"[zy]onLoad e\", e);\n        });\n    },\n    validateParam() {\n        var _a;\n        let mobile = this.data.account;\n        let mobileprefix = default_mobile_prefix;\n        let smsCode = this.data.code;\n        const App = getApp();\n        let { openid, unionid } = (_a = App === null || App === void 0 ? void 0 : App.globalData) === null || _a === void 0 ? void 0 : _a.session;\n        if (!mobile) {\n            __MOR_API__.showToast({\n                icon: 'none',\n                title: \"账号不能为空\",\n            });\n            return;\n        }\n        if (!smsCode) {\n            __MOR_API__.showToast({\n                icon: 'none',\n                title: \"验证码不能为空\",\n            });\n            return;\n        }\n        if (!openid) {\n            __MOR_API__.showToast({\n                icon: 'none',\n                title: \"需要先登录小程序\",\n            });\n            wxLogin();\n            return;\n        }\n        return true;\n    },\n    finishCode() {\n        if (!this.validateParam()) {\n            return;\n        }\n        let { operate } = this.data;\n        if ([\"register\", \"reset\"].indexOf(operate) > -1) {\n            this.validateSmsCode();\n        }\n        else { //login\n            this.login();\n        }\n    },\n    login() {\n        var _a, _b, _c, _d;\n        return __awaiter(this, void 0, void 0, function* () {\n            let mobile = this.data.account;\n            let mobileprefix = default_mobile_prefix;\n            let smsCode = this.data.code;\n            const App = getApp();\n            let { openid, unionid } = (_a = App === null || App === void 0 ? void 0 : App.globalData) === null || _a === void 0 ? void 0 : _a.session;\n            let res = yield getSmsSession({\n                openid,\n                unionid,\n                mobile,\n                smsCode,\n                mobileprefix\n            });\n            if ((_b = res === null || res === void 0 ? void 0 : res.loginResponse) === null || _b === void 0 ? void 0 : _b.flag) {\n                __MOR_API__.switchTab({ url: '/pages/cart/index' });\n            }\n            else if ((_c = res === null || res === void 0 ? void 0 : res.loginResponse) === null || _c === void 0 ? void 0 : _c.errorMsg) {\n                __MOR_API__.showToast({ title: (_d = res === null || res === void 0 ? void 0 : res.loginResponse) === null || _d === void 0 ? void 0 : _d.errorMsg });\n            }\n            else {\n                __MOR_API__.showToast({ title: \"登录失败，请检查手机号码和验证码\" });\n            }\n        });\n    },\n    validateSmsCode() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            let { operate, } = this.data;\n            let mobile = this.data.account;\n            let mobileprefix = default_mobile_prefix;\n            let smsCode = this.data.code;\n            const App = getApp();\n            let { openid, unionid } = (_a = App === null || App === void 0 ? void 0 : App.globalData) === null || _a === void 0 ? void 0 : _a.session;\n            let res = yield validateSmsService({\n                openid,\n                unionid,\n                mobile,\n                smsCode,\n                mobileprefix,\n                operation: operate,\n            });\n            if (res.returnCode === 0 && (res === null || res === void 0 ? void 0 : res.token)) { //data?.loginResponse?.token\n                this.setData({\n                    stepDisabled: false,\n                    validatedToken: res === null || res === void 0 ? void 0 : res.token,\n                });\n            }\n            else {\n                __MOR_API__.showToast({ title: (res === null || res === void 0 ? void 0 : res.message) || \"验证码失效\" });\n            }\n        });\n    },\n    goNext() {\n        let { account, operate, validatedToken, } = this.data;\n        if (validatedToken) {\n            if (operate === \"reset\") {\n                __MOR_API__.navigateTo({ url: `/pages/usercenter/reset/reset/index?account=${account}&token=${validatedToken}&operate=${operate}` });\n            }\n            else {\n                __MOR_API__.navigateTo({ url: `/pages/usercenter/register/pass/index?account=${account}&token=${validatedToken}&operate=${operate}` });\n            }\n        }\n        else {\n            __MOR_API__.showToast({ title: \"验证码错误，请重新尝试\" });\n            this.setData({ code: \"\" });\n        }\n    },\n    regain() {\n        this.setData({\n            isRegain: false,\n        });\n        this.countdown();\n    },\n    switchPass() {\n        let account = this.data.account;\n        __MOR_API__.navigateTo({ url: `/pages/usercenter/login/pass/index?account=${account}` });\n    },\n    getFocus() {\n        this.setData({\n            isFocus: true,\n        });\n    },\n    getCode(e) {\n        console.log(\"[zy]getCode\", e);\n        let code = e.detail.value;\n        this.setData({\n            code,\n        });\n        if (code.length === 6) {\n            this.finishCode();\n        }\n    },\n    countdown() {\n        var currentTime = this.data.time;\n        let timer = setInterval(() => {\n            currentTime--;\n            this.setData({\n                time: currentTime\n            });\n            if (currentTime <= 0) {\n                clearInterval(timer);\n                this.setData({\n                    time: default_sendsms_time,\n                    isRegain: true,\n                });\n            }\n        }, 1000);\n    },\n    /**\n     * 生命周期函数--监听页面显示\n     */\n    onShow() {\n    },\n    /**\n     * 生命周期函数--监听页面隐藏\n     */\n    onHide() {\n    },\n    /**\n     * 生命周期函数--监听页面卸载\n     */\n    onUnload() {\n    },\n    /**\n     * 页面相关事件处理函数--监听用户下拉动作\n     */\n    onPullDownRefresh() {\n    },\n    /**\n     * 页面上拉触底事件的处理函数\n     */\n    onReachBottom() {\n    },\n    /**\n     * 用户点击右上角分享\n     */\n    onShareAppMessage() {\n    }\n}, \"w\");\n","import { smsSession, sendSmsCode, validateSmsCode } from '../../model/usercenter/sessionModel';\nexport function getSmsSession(params) {\n    let prefix = \"[zy]getSmsSession\";\n    console.log(prefix, \"service start\");\n    return smsSession(params).then((data) => {\n        var _a;\n        console.log(prefix, \"resp=\", data);\n        if (data) {\n            // let {mobile,openid,unionid,loginResponse:{flag,token,uid,errorMsg,}}=data;\n            if ((_a = data === null || data === void 0 ? void 0 : data.loginResponse) === null || _a === void 0 ? void 0 : _a.flag) {\n                getApp().globalData.session = data;\n            }\n            return data;\n        }\n    });\n}\nexport function sendSmsCodeService(params) {\n    let prefix = \"[zy]sendSmsCodeService\";\n    console.log(prefix, \"service start\", params);\n    return sendSmsCode(params).then((data) => {\n        console.log(prefix, \"resp=\", data);\n        if (data) {\n            // let {mobile,openid,unionid,loginResponse:{flag,token,uid,errorMsg,}}=data;\n            return data;\n        }\n    });\n}\nexport function validateSmsService(params) {\n    let prefix = \"[zy]validateSmsService\";\n    console.log(prefix, \"service start\");\n    return validateSmsCode(params).then((data) => {\n        console.log(prefix, \"resp=\", data);\n        if (data) {\n            // let {mobile,openid,unionid,loginResponse:{flag,token,uid,errorMsg,}}=data;\n            return data;\n        }\n    });\n}\n"],"names":[],"sourceRoot":""}
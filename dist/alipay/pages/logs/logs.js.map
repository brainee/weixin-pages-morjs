{"version":3,"file":"pages/logs/logs.js","mappings":";;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack:///./pages/logs/logs.ts","webpack:///./utils/util.ts"],"sourcesContent":["var __MOR_API__ = require('@morjs/api').mor;\n\nimport { wPage } from '@morjs/core';\nimport { formatTime } from '../../utils/util';\nwPage({\n    data: {\n        logs: []\n    },\n    onLoad() {\n        this.setData({\n            logs: (__MOR_API__.getStorageSync('logs') || []).map((log) => {\n                return {\n                    date: formatTime(new Date(log)),\n                    timeStamp: log\n                };\n            })\n        });\n    }\n});\n","\"use strict\";\nexport const formatTime = (date) => {\n  const year = date.getFullYear();\n  const month = date.getMonth() + 1;\n  const day = date.getDate();\n  const hour = date.getHours();\n  const minute = date.getMinutes();\n  const second = date.getSeconds();\n  return [year, month, day].map(formatNumber).join(\"/\") + \" \" + [hour, minute, second].map(formatNumber).join(\":\");\n};\nconst formatNumber = (n) => {\n  const s = n.toString();\n  return s[1] ? s : \"0\" + s;\n};\n"],"names":[],"sourceRoot":""}
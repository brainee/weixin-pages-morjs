{"version":3,"file":"npm_components/tdesign-miniprogram/miniprogram_dist/icon/icon.js","mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack:///../node_modules/tdesign-miniprogram/miniprogram_dist/icon/icon.js"],"sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n        r = Reflect.decorate(decorators, target, key, desc);\n    else\n        for (var i = decorators.length - 1; i >= 0; i--)\n            if (d = decorators[i])\n                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { SuperComponent, wxComponent } from '../common/src/index';\nimport config from '../common/config';\nimport props from './props';\nimport { styles, addUnit } from '../common/utils';\nconst { prefix } = config;\nconst name = `${prefix}-icon`;\nlet Icon = class Icon extends SuperComponent {\n    constructor() {\n        super(...arguments);\n        this.externalClasses = [`${prefix}-class`];\n        this.properties = props;\n        this.data = {\n            componentPrefix: prefix,\n            classPrefix: name,\n            isImage: false,\n            iconStyle: undefined,\n        };\n        this.observers = {\n            'name, color, size, style'() {\n                this.setIconStyle();\n            },\n        };\n        this.methods = {\n            onTap(event) {\n                this.triggerEvent('click', event.detail);\n            },\n            setIconStyle() {\n                const { name, color, size } = this.properties;\n                const isImage = name.indexOf('/') !== -1;\n                const sizeValue = addUnit(size);\n                const sizeStyle = isImage ? { width: sizeValue, height: sizeValue } : {};\n                const colorStyle = color ? { color: color } : {};\n                const fontStyle = size ? { 'font-size': sizeValue } : {};\n                this.setData({\n                    isImage,\n                    iconStyle: `${styles(Object.assign(Object.assign(Object.assign({}, colorStyle), fontStyle), sizeStyle))}`,\n                });\n            },\n        };\n    }\n};\nIcon = __decorate([\n    wxComponent()\n], Icon);\nexport default Icon;\n"],"names":[],"sourceRoot":""}
<import-sjs name="thisSjs" from="./badge.sjs"></import-sjs>
<import-sjs name="_" from="../common/utils.sjs"></import-sjs>

<!--
  1. labelID 用于描述当前元素的文本
  2. descriptionID 用于描述badge消息的文本
  3. role=option一般用于多个内容合并焦点连续朗读
-->

<view style="{{_._style([style, customStyle])}}" class="{{thisSjs.getBadgeOuterClass({shape})}} class {{prefix}}-class" aria-labelledby="{{labelID}}" aria-describedby="{{descriptionID}}" aria-role="{{ ariaRole || 'option'}}">
  <view id="{{labelID}}" class="{{classPrefix}}__content {{prefix}}-class-content" aria-hidden="true">
    <slot class="{{classPrefix}}__content-slot" a:if="{{!content}}"></slot>
    <text class="{{classPrefix}}__content-text" a:else>{{content}}</text>
  </view>
  <view aria-hidden="true" aria-label="{{ ariaLabel || _.getBadgeAriaLabel({dot, count, maxCount}) }}" id="{{descriptionID}}" class="{{thisSjs.getBadgeInnerClass({dot, size, shape, count})}} {{prefix}}-has-count {{prefix}}-class-count" style="{{thisSjs.getBadgeStyles({color, offset})}}" a:if="{{thisSjs.isShowBadge({dot,count,showZero})}}">
    <view class="t-badge__ribbon--before" style="{{color ? 'border-color: ' + color : ''}}" a:if="{{shape == 'ribbon'}}"></view>
    {{ thisSjs.getBadgeValue({dot, count, maxCount}) }}
    <view class="t-badge__ribbon--after" style="{{color ? 'border-color: ' + color : ''}}" a:if="{{shape == 'ribbon'}}"></view>
  </view>
  <slot name="count"></slot>
</view>

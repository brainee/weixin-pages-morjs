{"version":3,"file":"miniprogram_npm/tdesign-miniprogram/overlay/overlay.js","mappingssources":["webpack:///./miniprogram_npm/tdesign-miniprogram/mixins/transition.js","webpack:///./miniprogram_npm/tdesign-miniprogram/overlay/overlay.js"],"sourcesContent":["\"use strict\";\nvar Behavior = require(\"/Users/zolad/work/app/ctrip/fly/WeChatProjects/weixin-pages-morjs/node_modules/@morjs/runtime-mini/lib/common/behaviorOrMixin.js\").Behavior;\nimport config from \"../common/config\";\nconst { prefix } = config;\nexport default function transition() {\n  return Behavior({\n    properties: {\n      visible: {\n        type: Boolean,\n        value: null,\n        observer: \"watchVisible\"\n      },\n      appear: Boolean,\n      name: {\n        type: String,\n        value: \"fade\"\n      },\n      durations: {\n        type: Number,\n        optionalTypes: [Array]\n      }\n    },\n    data: {\n      transitionClass: \"\",\n      transitionDurations: 300,\n      className: \"\",\n      realVisible: false\n    },\n    created() {\n      this.status = \"\";\n      this.transitionT = 0;\n    },\n    attached() {\n      this.durations = this.getDurations();\n      if (this.data.visible) {\n        this.enter();\n      }\n      this.inited = true;\n    },\n    detached() {\n      clearTimeout(this.transitionT);\n    },\n    methods: {\n      watchVisible(curr, prev) {\n        if (this.inited && curr !== prev) {\n          curr ? this.enter() : this.leave();\n        }\n      },\n      getDurations() {\n        const { durations } = this.data;\n        if (Array.isArray(durations)) {\n          return durations.map((item) => Number(item));\n        }\n        return [Number(durations), Number(durations)];\n      },\n      enter() {\n        const { name } = this.data;\n        const [duration] = this.durations;\n        this.status = \"entering\";\n        this.setData({\n          realVisible: true,\n          transitionClass: `${prefix}-${name}-enter ${prefix}-${name}-enter-active`\n        });\n        setTimeout(() => {\n          this.setData({\n            transitionClass: `${prefix}-${name}-enter-active ${prefix}-${name}-enter-to`\n          });\n        }, 30);\n        if (typeof duration === \"number\" && duration > 0) {\n          this.transitionT = setTimeout(this.entered.bind(this), duration + 30);\n        }\n      },\n      entered() {\n        this.customDuration = false;\n        clearTimeout(this.transitionT);\n        this.status = \"entered\";\n        this.setData({\n          transitionClass: \"\"\n        });\n      },\n      leave() {\n        const { name } = this.data;\n        const [, duration] = this.durations;\n        this.status = \"leaving\";\n        this.setData({\n          transitionClass: `${prefix}-${name}-leave  ${prefix}-${name}-leave-active`\n        });\n        clearTimeout(this.transitionT);\n        setTimeout(() => {\n          this.setData({\n            transitionClass: `${prefix}-${name}-leave-active ${prefix}-${name}-leave-to`\n          });\n        }, 30);\n        if (typeof duration === \"number\" && duration > 0) {\n          this.customDuration = true;\n          this.transitionT = setTimeout(this.leaved.bind(this), duration + 30);\n        }\n      },\n      leaved() {\n        this.customDuration = false;\n        this.triggerEvent(\"leaved\");\n        clearTimeout(this.transitionT);\n        this.status = \"leaved\";\n        this.setData({\n          transitionClass: \"\"\n        });\n      },\n      onTransitionEnd() {\n        if (this.customDuration) {\n          return;\n        }\n        clearTimeout(this.transitionT);\n        if (this.status === \"entering\" && this.data.visible) {\n          this.entered();\n        } else if (this.status === \"leaving\" && !this.data.visible) {\n          this.leaved();\n          this.setData({\n            realVisible: false\n          });\n        }\n      }\n    }\n  });\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n        r = Reflect.decorate(decorators, target, key, desc);\n    else\n        for (var i = decorators.length - 1; i >= 0; i--)\n            if (d = decorators[i])\n                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { SuperComponent, wxComponent } from '../common/src/index';\nimport config from '../common/config';\nimport transition from '../mixins/transition';\nconst { prefix } = config;\nconst name = `${prefix}-overlay`;\nlet Overlay = class Overlay extends SuperComponent {\n    constructor() {\n        super(...arguments);\n        this.properties = {\n            zIndex: {\n                type: Number,\n                value: 11000,\n            },\n            duration: {\n                type: Number,\n                value: 300,\n            },\n            backgroundColor: {\n                type: String,\n                value: '',\n            },\n            preventScrollThrough: {\n                type: Boolean,\n                value: true,\n            },\n        };\n        this.behaviors = [transition()];\n        this.data = {\n            prefix,\n            classPrefix: name,\n            computedStyle: '',\n            _zIndex: 11000,\n        };\n        this.observers = {\n            backgroundColor(v) {\n                this.setData({\n                    computedStyle: v ? `background-color: ${v};` : '',\n                });\n            },\n            zIndex(v) {\n                if (v !== 0) {\n                    this.setData({\n                        _zIndex: v,\n                    });\n                }\n            },\n        };\n        this.methods = {\n            handleClick() {\n                this.triggerEvent('click', { visible: !this.properties.visible });\n            },\n            noop() { },\n        };\n    }\n};\nOverlay = __decorate([\n    wxComponent()\n], Overlay);\nexport default Overlay;\n"],"names":[],"sourceRoot":""}